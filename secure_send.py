from message_clients.message_sender import RedisClient
from encrypts.kyber_encrypt import KyberEncrypt
from encrypts.aes_encrypt import AESEncrypt
from kyber import Kyber512

class SecureSend:
    def __init__(self, key):
        self.public_key = key
    
    def send(self, data):
         # generating AES key using Kyber challenge, shared key pair. 
        challenge, share_key = KyberEncrypt().generate_challenge_key_pair(self.public_key)

        # use share_key to encypt data
        nonce, tag, ciphertext = AESEncrypt().encrypt(data, share_key)

        # send encrypted data and AES Key to receiver
        RedisClient().send('channel', challenge  +  b' ||| ' + ciphertext +  b' ||| ' + nonce + b' ||| ' + tag)


if __name__ == '__main__':
    pk = b'h\xf7MJ\x80\x1d\xa9\x96e.\xf1\x1f\x96\x864\x0bDc\xcb\xebvV\x08<\xc3\xd6L\xdc\x834*[?q6%@{\x8e8,\x83!\x05\x18\x89\x05OtRB \x82\xc4\xa5\x17w\xdb\xebK\xe5\x07\x97\x03\x80\x11\xfc\x9bd\x15\x05p\x14c\xa4V\xd3`M\xb8)\x84$\xa1\xac*\xb0h\xf5\x15\xe3\xea&\x171[9\x1a\x16\xda\xd6\xa0\xf93\r\x1dF\x8c\x05+\x97\xa7\xe8\xb3\x05\x9aTWlQ;t\xb2\xc1l5\x8d0\x94P\t: \xe1&dG\x9a\x03<:\x07@0\xc97\xcc=\xf7rV\xa4@~q\xbd\xe1\x89;:a\x8d@\xd4\x92\xc3\x9b0\xb9y\x9d\x85\xcc\xc0f\t\x16_g\x9b)\xe3=(\xb5S\x91t\xac\xab\xf3\x1b\x0b\xc7\xa9\x0b$*\xc6`e\xdc"/\xdc9+\x11:5E\xa6v\xd8\xcb\x0cm\x97\x90SU\x1c\xb4W2 9\xb18\xcau\xf57\x89A\xfbl\xd2A\xad:\xfc\n\xe3\xb3\x08\xe5X\x1ae\xd4,&\xb0\x81\xd1\xe9\xb8\xe3\n\x86\xf49\x8b)\xbcM\x92\xdas\x15(\x93\xa5\xe73I7\xac\xd6\x87h\xa0\x99\xb6\x97w\x9f\xb4\xda\x94FB\xb0\xca\xf9CZJ\r\xbc\x17$\x00\x17\xbe\xe8\xa1H\x11\x07!\xfcV\x8d.\xe6\x90\x1a\xeb\xc1j\x15\x80\xb2q\x0c9\x1bQ\x1e(T\xf0@\xbd\xc1\xb1\xb1&\xec\x1c\xa0v+>h\xc1\x00\xb5A&D\xb9\xd7\xb5\x82\x17\x86\xce]2\xc9\x85\xa8\x1f\xf4\xb2W\xc0!{\x04\x12\r\x19\x01\xafZ\xa2\x8cn\xa4v\x9c\x1c\x1bI\xcc\xc1\xf30\xc2!\x0bg4\xbcv\xa9F\x7fg\x07\xb4F\xc4\x82bbA4V\xa3]\xb6\x9e=gD\x821v\xc5RD}\x84\xc3\xb6\xb4\xb85\xa1^Jq\x06\xf0p3P\xd0}\xbb\x99a\x08\xc7\xbf+Cj\xf2\xfa\x94\xb9&\xc8zz\xc5(\xe7\x8esIi\x8b\x97\xcf\xae\x13M\x1b\x95\xb1\xf3\xd8H\xe3\x08\xce\\\xa0?\x99\xf9\xaay\x82#\xb3cs\xb22\xca\x8a\xc9@\xcc\x8a\r y\x94\xf3l\xcf_&\x18]\xeb#\xd4\x08E\xb2$;\x93\xa4\xb3\xd7\xa0\x90\x95\x97~\x9f\'J\xf9\t\x1e\x05\\\xb4F\x95\x81\xa7\xf0<\x95\xb9A\x9a\xdaxu\xc0C\x8f\xd2W.\x08\xa3\xff\xf9Gkj\'\x9a\x80\xa5\x917\x18|3\x80\x8c\xc3\x99\x19\x84T\xc3$\xc4$\xcb1\x10@,\xcdV\x8b\x97\xc0\x04\x14\x13\xcel\x97\xb3n\x94?\x1c\xfb\x8a\x10q\x94\x9dq5!\xe2l\xa6!(\x17\xf1.\xd4qb\xb9\xea(\xa5\xd4B\xc4\xecQk\x83&-R\x97<\xb0C\xcej\xca:\xc7\x98M\xf4\x90D\xda\xbcCYb$\x06\x98\xdd\x9b\x14\xa4\x95laB\xcc{F\x93>v\x11\xdb\xf3\x00\xffR\x97D\xec@\xc9v*\xf8\xac$\xb7\xc7\xc2z\x9a7\xee\xda1\xbb&\x94\xcf\x98tix\xb6\xd0\x16H\xccE\x08:\x9b%_\xa29\x1c\xfa\x17KG\x7f\xd54L\xfa9\x88\x91\xe9-\xae\xf1\xb4*\xd2\x0e/1\x96}\xa8O\xd6di\xe3\xb6\x83X\xdb\x9d\x924\xa8\x1503\x98e\x9f\x07\xbf\xab3\x13\xee\x08aG2\xbc\xec\x82R\xca\xc7E\xb0,\x8e\xbf\x81\x87V\x99\x16\xd1\x81XZ\xe3\xf2'
    SecureSend(pk).send(b'hey hey hey ')
