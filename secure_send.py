from message_clients.message_sender import RedisClient
from encrypts.kyber_encrypt import KyberEncrypt
from encrypts.aes_encrypt import AESEncrypt
from kyber import Kyber512

class SecureSend:
    def __init__(self, key):
        self.public_key = key
    
    def send(self, data):
         # generating AES key using Kyber challenge, shared key pair. 
        challenge, share_key = KyberEncrypt().generate_challenge_key_pair(self.public_key)

        # use share_key to encypt data
        nonce, tag, ciphertext = AESEncrypt().encrypt(data, share_key)

        # send encrypted data and AES Key to receiver
        RedisClient().send('channel', challenge  +  b' ||| ' + ciphertext +  b' ||| ' + nonce + b' ||| ' + tag)


if __name__ == '__main__':
    pk = b'\x13\xb1\\\x88B\x1dF\xcb,\x06\x03{\xa0\x88&p7\xc0s\x01k\xf5a\x82\x7f\xaa\x91\x8f1xh\xe6K[\x99e\x8e\x02\xcbI2\x92\xd8t\x05p|L\xb58\xb7\xbbdwZT\x94\xf4b\xadwU\x9d\xc9\xa5eF\x0cR78\xcbX =\xe9\x87\x81\x91<\xad\x8e\xaa\x9d\xa1\xe8\x89\xbe\xd1\xbb\x90\xa4\x04dTLq\x92^\x90\xe6@b\xe3\x05\xba\x94\x1d\x84|\x02\xfef+`w+\xc4\xf7\xaae\x89\xcf\xeaQp\xd4\xa6\x8c\xe2d\xcdr\xb1\x99\xbe\xbb\x06\xb6c7\x04\x10)>\xa0\x00\xf8\xe4H\xb0\x15*f\x91-\xe0\x94\x04\xa8%q\x1b\xe1Uy0>=\x14Wj\xa9\xb7|\xcb9\xb6,\xcas\x91\xb5\xcf\xf5\xb3\x1e\xdc\x06\xa6\x0b\xcaHeX\x84h{\x94B#2f\x18\x8aYU\xbf7\xa3\xdc\xfc\xbd\x10\xf0[T"\xb1\x12\xe4d\xdeG\x98\x1e\xf3k\x9d\x06Tfr\x15\x0cv\x07\xe5\xe9\x01\xe9\xfa;Q\x93\xce\x14\xd9\xab\x1f7\xc9r*Cf\xb1\x083\x06[\x12\xb57c\xa9\x1ca\xd0\xc1\xa0\xc4qp\x85e\x0cv\xb2o\xc4U\xc7h>\x8b\xf2U\xa7\xca\xa5B\x02v/\xb2\xcc"\xd3\x11\x0f\xd8\xa4\xe2v\xbe\x07\x89\xaf\xb9KLxlr\xe8\xcbc\x02\\\r\xe1U\x96irb\xe5l\x86\x14Y,#kK\xeb\xb3t\x14v\x17\xfc\x96:P\xf5TK\xdc\x05\x18\x01=<\xdb\x8eyV\xc2\xe3\x1b\x85(\x99\x95Jpj\xe7\x953\x93\xd0\x81\xb2X\xcf,\x99\xaf\r9\xca-\xa1Y[PY\xf41\xaf\x197"\x17+\xa9\x7f\xa7\xb1\x95\x94\x0fr\x83/\x9ey\x8c\x9e\xfc|j8C\x0c\x0b$\x92\x80\xbc\xfe\x86FL\xf2\xb6\xa5\x079\x16\xcc\x07\x16L\\\xa1J\xbb<\xa3\x17\xb5\xc0;\x89\xfaM\xb8$\xacn\x04\x92\xa7b!}\\\x86\xc9\xa9\xb1z\x8ck\xb8\xc2\xba\xee\xbc\x82\xd1\xc98\xcbQ\x97\xff\xb0e\x06\xac\xbee\xa1\x0b\x85zG{9\x8e\x96\xb2\xb4\x153H\xbcu\\\x19\x07\x80)Y\xcd\x10|\xa2~\xe2 *\xf3n>\xf7\x7f\xa9wL\xee\xbaP\xd8\t\x1b\xce\x80\xcc[\x88o\x949\x03\xf1\x04a\x04\xb0|\xb3\x02\x8f39\r\xb1\xe8u}GT\xe8\x17D\xf4\x04F\x1d\x14\xa8\xc3\x0c\x1ce\x97\x82e0\xa5\xa1\x91\xbd\xe8VWNf\x85\xfd\xda\xc0,"\xafw\xbb7MJRC{w\xa8\xa9\x0eq61\xc7\xf9>\xff4\x9a\x84\xa6\\"\x06\xa8_\x8b\x05\xe7\xb4\xb3\xa4\x11\x88@RC\xe2E$<s\xcb%\x1c\x92V8\x8d\x95Y\x9d3\xda/\xbd\xcc1"X\x08\\\xe4\x84\x1c\xa9\xbb\xcd\nVQ\x89\x0fA\x90-G -\xe0\x83\x1e\xdb\x96F\xa7vY6BX74\x81\x92\x15\x8c\x8e\x03\x10\x97\x9b\xbb\x8bx\x82A\xdb`\xb7l\xcf\x82\xf0+\xa4\xa9\xae\xc6\xf7G\t\xc1\xa3\xf6\xda\x16p\x8b@\x1c\x88\xba\xb33m\xed\x99\x00h\xcbz\xa8!S\xc28\xc5\xfb5\x01Fu]R\x18\xa6m\xea\t\xcb2~5w\xa3\xc4":X\x8b\xb3l\x13\x8b\x0b\x02?\x87\xe96W\xf9\xdfz\x07\xcc\x86\xb3\x93:a\x81\x1ev\xddhR\xae\x90\x1ek\xe3\xe4\xa7=x'
    SecureSend(pk).send(b' hello whatever ')
